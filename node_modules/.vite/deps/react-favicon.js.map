{
  "version": 3,
  "sources": ["../../react-favicon/src/index.jsx"],
  "sourcesContent": ["import { useCallback, useEffect, useRef, useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst DefaultCanvasSize = 16\nconst linkElements = []\n\nconst drawAlert = (context, { fillColor, text, textColor, canvasSize }) => {\n  // Allow same looking padding over differents iconSizes\n  const Padding = canvasSize / 5\n  // Allow readable text across differnts iconSizes\n  context.font = `bold ${canvasSize - Padding * 2}px arial`\n\n  const w =\n    Math.min(\n      // Take the text with if it's smaller than available space (eg: '2')\n      context.measureText(text).width,\n      // Or take the maximum size we'll force our text to fit in anyway (eg: '1000000')\n      canvasSize - Padding\n    ) + Padding\n\n  const x = canvasSize - w\n  const y = canvasSize / 2 - Padding\n  const h = Padding + canvasSize / 2\n  const r = Math.min(w / 2, h / 2)\n\n  context.beginPath()\n  context.moveTo(x + r, y)\n  context.arcTo(x + w, y, x + w, y + h, r)\n  context.arcTo(x + w, y + h, x, y + h, r)\n  context.arcTo(x, y + h, x, y, r)\n  context.arcTo(x, y, x + w, y, r)\n  context.closePath()\n  context.fillStyle = fillColor\n  context.fill()\n  context.fillStyle = textColor\n  context.textBaseline = 'bottom'\n  context.textAlign = 'right'\n  context.fillText(\n    text,\n    canvasSize - Padding / 2,\n    canvasSize,\n    // This will prevent the text from going outside the favicon, instead it'll squeeze his with to fit in\n    canvasSize - Padding\n  )\n}\n\nconst drawIcon = ({\n  alertCount,\n  alertFillColor,\n  alertTextColor,\n  callback,\n  renderOverlay,\n  url: src,\n  canvasSize,\n}) => {\n  const img = document.createElement('img')\n  img.crossOrigin = 'Anonymous'\n  img.onload = function () {\n    const canvas = document.createElement('canvas')\n    canvas.width = canvasSize\n    canvas.height = canvasSize\n\n    const context = canvas.getContext('2d')\n    context.clearRect(0, 0, img.width, img.height)\n    context.drawImage(img, 0, 0, canvas.width, canvas.height)\n\n    if (alertCount) {\n      drawAlert(context, {\n        fillColor: alertFillColor,\n        textColor: alertTextColor,\n        text: alertCount,\n        canvasSize,\n      })\n    }\n\n    if (renderOverlay) {\n      renderOverlay(canvas, context)\n    }\n    callback(context.canvas.toDataURL())\n  }\n  img.src = src\n}\n\nconst updateHtmlIconLink = (keepIconLink) => {\n  if (typeof document === 'undefined') {\n    return\n  }\n\n  if (linkElements.length === 0) {\n    var head = document.getElementsByTagName('head')[0]\n\n    const linkEl = document.createElement('link')\n    linkEl.type = 'image/x-icon'\n    linkEl.rel = 'icon'\n\n    const linkApple = document.createElement('link')\n    linkApple.rel = 'apple-touch-icon'\n\n    linkElements.push(linkEl, linkApple)\n\n    // remove existing favicons\n    var links = head.getElementsByTagName('link')\n    for (var i = links.length; --i >= 0; ) {\n      if (\n        /\\bicon\\b/i.test(links[i].getAttribute('rel')) &&\n        !keepIconLink(links[i])\n      ) {\n        head.removeChild(links[i])\n      }\n    }\n\n    linkElements.forEach((el) => head.appendChild(el))\n  }\n}\n\nconst defaultKeepIconLink = () => false\n\nconst Favicon = ({\n  iconSize = DefaultCanvasSize,\n  alertCount = null,\n  alertFillColor = 'red',\n  alertTextColor = 'white',\n  animated = true,\n  animationDelay = 500,\n  keepIconLink = defaultKeepIconLink,\n  renderOverlay = null,\n  url = null,\n}) => {\n  const animationIndex = useRef(0)\n  const animationTickIntervalId = useRef(null)\n\n  const [, updateState] = useState()\n  const forceUpdate = useCallback(() => updateState({}), [])\n\n  const onAnimationTick = useCallback(() => {\n    updateHtmlIconLink(keepIconLink)\n    animationIndex.current = (animationIndex.current + 1) % url.length\n    forceUpdate()\n  }, [forceUpdate, keepIconLink, url])\n\n  // Perform initial favicon update\n  useEffect(() => {\n    onAnimationTick()\n  }, [onAnimationTick])\n\n  const isAnimated = url instanceof Array && animated\n\n  useEffect(() => {\n    if (isAnimated) {\n      if (!animationTickIntervalId.current) {\n        const intervalId = setInterval(onAnimationTick, animationDelay)\n        animationTickIntervalId.current = intervalId\n      }\n    } else {\n      if (animationTickIntervalId.current) {\n        clearInterval(animationTickIntervalId.current)\n        animationTickIntervalId.current = null\n        updateHtmlIconLink(keepIconLink)\n      }\n    }\n  }, [animationDelay, isAnimated, keepIconLink, onAnimationTick, url])\n\n  const currentUrl = isAnimated\n    ? url[animationIndex.current]\n    : url instanceof Array\n    ? url[0]\n    : url\n\n  if (alertCount || renderOverlay) {\n    drawIcon({\n      alertCount,\n      alertFillColor,\n      alertTextColor,\n      callback: (url) => {\n        linkElements.forEach((el) => (el.href = url))\n      },\n      renderOverlay,\n      url: currentUrl,\n      canvasSize: iconSize,\n    })\n  } else {\n    linkElements.forEach((el) => (el.href = currentUrl))\n  }\n\n  return null\n}\n\nFavicon.propTypes = {\n  iconSize: PropTypes.number,\n  alertCount: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  alertFillColor: PropTypes.string,\n  alertTextColor: PropTypes.string,\n  animated: PropTypes.bool,\n  animationDelay: PropTypes.number,\n  keepIconLink: PropTypes.func,\n  renderOverlay: PropTypes.func,\n  url: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]).isRequired,\n}\n\nexport default Favicon\n"],
  "mappings": "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",
  "names": ["url", "PropTypes"]
}
